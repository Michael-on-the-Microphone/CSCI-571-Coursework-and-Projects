{"ast":null,"code":"// API service for making requests to the backend\n// Get the base URL for API calls\nconst getBaseUrl=()=>{// Use absolute URL for API calls when deployed to App Engine\nif(window.location.hostname.includes('appspot.com')){return window.location.origin;}// Use relative URL for local development\nreturn'';};// Create a reusable fetch function with error handling\nconst fetchWithErrorHandling=async function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{console.log(`Making API request to: ${url}`);// Add default headers\nconst headers={'Accept':'application/json','Content-Type':'application/json',...options.headers};// Make the request\nconst response=await fetch(url,{...options,headers});// Check if the response is ok\nif(!response.ok){const errorText=await response.text();console.error(`HTTP error! status: ${response.status}, response: ${errorText}`);throw new Error(`HTTP error! status: ${response.status}`);}// Parse the response as JSON\nconst data=await response.json();return data;}catch(error){console.error(`API request failed: ${error.message}`);throw error;}};// API functions\nexport const searchArtists=async query=>{const baseUrl=getBaseUrl();const encodedQuery=encodeURIComponent(query);const url=`${baseUrl}/api/searchArtists?query=${encodedQuery}`;return fetchWithErrorHandling(url);};export const fetchArtistData=async artistId=>{const baseUrl=getBaseUrl();const url=`${baseUrl}/api/fetchArtistData?artistId=${artistId}`;return fetchWithErrorHandling(url);};export const fetchArtworkData=async artistId=>{const baseUrl=getBaseUrl();const url=`${baseUrl}/api/fetchArtworkData?artistId=${artistId}`;return fetchWithErrorHandling(url);};export const fetchCategories=async artworkId=>{const baseUrl=getBaseUrl();const url=`${baseUrl}/api/fetchCategories?artworkId=${artworkId}`;return fetchWithErrorHandling(url);};export const getSimilarArtistData=async artistId=>{const baseUrl=getBaseUrl();const url=`${baseUrl}/api/getSimilarArtistData?artistId=${artistId}`;return fetchWithErrorHandling(url);};export const updateFavorites=async(action,artist)=>{const baseUrl=getBaseUrl();const url=`${baseUrl}/api/updateFavorites`;// If adding a favorite, fetch complete artist data first\nif(action==='add'){try{// Fetch complete artist data to ensure we have all fields\nconst artistData=await fetchArtistData(artist.id);const payload={action,artist:{artistId:artist.id,name:artist.name,thumbnail:artist.image,birthday:artistData.birthday,deathday:artistData.deathday,nationality:artistData.nationality}};const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload),credentials:'include'});const data=await response.json();if(!response.ok){throw new Error(data.error||'Failed to update favorites');}return data;}catch(error){console.error('Error updating favorites:',error);throw error;}}else{// For removing favorites, use the original approach\nconst payload={action,artistId:artist};const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload),credentials:'include'});const data=await response.json();if(!response.ok){throw new Error(data.error||'Failed to update favorites');}return data;}// This code is now handled in the if/else blocks above\n};export default{searchArtists,fetchArtistData,fetchArtworkData,fetchCategories,getSimilarArtistData,updateFavorites};","map":{"version":3,"names":["getBaseUrl","window","location","hostname","includes","origin","fetchWithErrorHandling","url","options","arguments","length","undefined","console","log","headers","response","fetch","ok","errorText","text","error","status","Error","data","json","message","searchArtists","query","baseUrl","encodedQuery","encodeURIComponent","fetchArtistData","artistId","fetchArtworkData","fetchCategories","artworkId","getSimilarArtistData","updateFavorites","action","artist","artistData","id","payload","name","thumbnail","image","birthday","deathday","nationality","method","body","JSON","stringify","credentials"],"sources":["/Users/praveen/Desktop/USC/CSCI 571 WebTech/learnreact/backup/client/src/services/api.js"],"sourcesContent":["// API service for making requests to the backend\n\n// Get the base URL for API calls\nconst getBaseUrl = () => {\n  // Use absolute URL for API calls when deployed to App Engine\n  if (window.location.hostname.includes('appspot.com')) {\n    return window.location.origin;\n  }\n  // Use relative URL for local development\n  return '';\n};\n\n// Create a reusable fetch function with error handling\nconst fetchWithErrorHandling = async (url, options = {}) => {\n  try {\n    console.log(`Making API request to: ${url}`);\n\n    // Add default headers\n    const headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      ...options.headers\n    };\n\n    // Make the request\n    const response = await fetch(url, {\n      ...options,\n      headers\n    });\n\n    // Check if the response is ok\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`HTTP error! status: ${response.status}, response: ${errorText}`);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    // Parse the response as JSON\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`API request failed: ${error.message}`);\n    throw error;\n  }\n};\n\n// API functions\nexport const searchArtists = async (query) => {\n  const baseUrl = getBaseUrl();\n  const encodedQuery = encodeURIComponent(query);\n  const url = `${baseUrl}/api/searchArtists?query=${encodedQuery}`;\n\n  return fetchWithErrorHandling(url);\n};\n\nexport const fetchArtistData = async (artistId) => {\n  const baseUrl = getBaseUrl();\n  const url = `${baseUrl}/api/fetchArtistData?artistId=${artistId}`;\n\n  return fetchWithErrorHandling(url);\n};\n\nexport const fetchArtworkData = async (artistId) => {\n  const baseUrl = getBaseUrl();\n  const url = `${baseUrl}/api/fetchArtworkData?artistId=${artistId}`;\n\n  return fetchWithErrorHandling(url);\n};\n\nexport const fetchCategories = async (artworkId) => {\n  const baseUrl = getBaseUrl();\n  const url = `${baseUrl}/api/fetchCategories?artworkId=${artworkId}`;\n\n  return fetchWithErrorHandling(url);\n};\n\nexport const getSimilarArtistData = async (artistId) => {\n  const baseUrl = getBaseUrl();\n  const url = `${baseUrl}/api/getSimilarArtistData?artistId=${artistId}`;\n\n  return fetchWithErrorHandling(url);\n};\n\nexport const updateFavorites = async (action, artist) => {\n  const baseUrl = getBaseUrl();\n  const url = `${baseUrl}/api/updateFavorites`;\n\n  // If adding a favorite, fetch complete artist data first\n  if (action === 'add') {\n    try {\n      // Fetch complete artist data to ensure we have all fields\n      const artistData = await fetchArtistData(artist.id);\n\n      const payload = {\n        action,\n        artist: {\n          artistId: artist.id,\n          name: artist.name,\n          thumbnail: artist.image,\n          birthday: artistData.birthday,\n          deathday: artistData.deathday,\n          nationality: artistData.nationality\n        }\n      };\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n        credentials: 'include'\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to update favorites');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Error updating favorites:', error);\n      throw error;\n    }\n  } else {\n    // For removing favorites, use the original approach\n    const payload = { action, artistId: artist };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n      credentials: 'include'\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to update favorites');\n    }\n\n    return data;\n  }\n\n  // This code is now handled in the if/else blocks above\n};\n\nexport default {\n  searchArtists,\n  fetchArtistData,\n  fetchArtworkData,\n  fetchCategories,\n  getSimilarArtistData,\n  updateFavorites\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}