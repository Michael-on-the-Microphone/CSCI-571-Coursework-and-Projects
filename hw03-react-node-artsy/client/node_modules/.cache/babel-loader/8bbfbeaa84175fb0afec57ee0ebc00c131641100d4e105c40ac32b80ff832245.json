{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{showSuccessNotification,showErrorNotification}from'../utils/notifications';import{updateFavorites}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check if user is logged in on initial load\nuseEffect(()=>{const checkLoggedIn=async()=>{try{setLoading(true);const response=await fetch('/api/me');if(response.ok){const userData=await response.json();setUser(userData);}else{setUser(null);}}catch(err){console.error('Error checking authentication:',err);setUser(null);}finally{setLoading(false);}};checkLoggedIn();},[]);// Register a new user\nconst register=async userData=>{try{console.log('Registering user with data:',userData);setLoading(true);setError(null);console.log('Sending registration request to /api/register');const response=await fetch('/api/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData),credentials:'include'});console.log('Registration response status:',response.status);const data=await response.json();console.log('Registration response data:',data);if(!response.ok){console.error('Registration failed:',data.error);// Return the error directly instead of throwing\nreturn{success:false,error:data.error||'Registration failed'};}console.log('Registration successful, setting user data');setUser(data);return{success:true};}catch(err){console.error('Registration error:',err);setError(err.message);return{success:false,error:err.message};}finally{setLoading(false);}};// Login user\nconst login=async credentials=>{try{console.log('Logging in with credentials:',credentials);setLoading(true);setError(null);console.log('Sending login request to /api/login');const response=await fetch('/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials),credentials:'include'});console.log('Login response status:',response.status);const data=await response.json();console.log('Login response data:',data);if(!response.ok){console.error('Login failed:',data.error);// Return the error directly instead of throwing\nreturn{success:false,error:data.error||'Login failed'};}console.log('Login successful, setting user data');setUser(data);return{success:true};}catch(err){console.error('Login error:',err);setError(err.message);return{success:false,error:err.message};}finally{setLoading(false);}};// Logout user\nconst logout=async()=>{try{setLoading(true);const response=await fetch('/api/logout',{method:'POST',credentials:'include'});if(!response.ok){throw new Error('Logout failed');}setUser(null);showSuccessNotification('Logged out successfully');return{success:true};}catch(err){console.error('Logout error:',err);return{success:false,error:err.message};}finally{setLoading(false);}};// Delete user account\nconst deleteAccount=async()=>{try{setLoading(true);const response=await fetch('/api/deleteUser',{method:'DELETE',credentials:'include'});if(!response.ok){throw new Error('Failed to delete account');}setUser(null);showErrorNotification('Account deleted');return{success:true};}catch(err){console.error('Delete account error:',err);return{success:false,error:err.message};}finally{setLoading(false);}};// Add artist to favorites\nconst addToFavorites=async artist=>{if(!user)return{success:false,error:'User not authenticated'};try{// Use the API service to fetch complete artist data and update favorites\nconst data=await updateFavorites('add',artist);// Update user with new favorites\nsetUser(prevUser=>({...prevUser,favorites:data.favorites}));showSuccessNotification('Added to favorites');return{success:true};}catch(err){console.error('Add to favorites error:',err);return{success:false,error:err.message};}};// Remove artist from favorites\nconst removeFromFavorites=async artistId=>{if(!user)return{success:false,error:'User not authenticated'};try{// Use the API service to update favorites\nconst data=await updateFavorites('remove',artistId);// Update user with new favorites\nsetUser(prevUser=>({...prevUser,favorites:data.favorites}));showErrorNotification('Removed from favorites');return{success:true};}catch(err){console.error('Remove from favorites error:',err);return{success:false,error:err.message};}};// Check if an artist is in favorites\nconst isInFavorites=artistId=>{if(!user||!user.favorites)return false;return user.favorites.some(fav=>fav.artistId===artistId);};const value={user,loading,error,register,login,logout,deleteAccount,addToFavorites,removeFromFavorites,isInFavorites,setUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","showSuccessNotification","showErrorNotification","updateFavorites","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","checkLoggedIn","response","fetch","ok","userData","json","err","console","register","log","method","headers","body","JSON","stringify","credentials","status","data","success","message","login","logout","Error","deleteAccount","addToFavorites","artist","prevUser","favorites","removeFromFavorites","artistId","isInFavorites","some","fav","value","Provider"],"sources":["/Users/praveen/Desktop/USC/CSCI 571 WebTech/learnreact/backup/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { showSuccessNotification, showErrorNotification } from '../utils/notifications';\nimport { updateFavorites } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch('/api/me');\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n        } else {\n          setUser(null);\n        }\n      } catch (err) {\n        console.error('Error checking authentication:', err);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  // Register a new user\n  const register = async (userData) => {\n    try {\n      console.log('Registering user with data:', userData);\n      setLoading(true);\n      setError(null);\n\n      console.log('Sending registration request to /api/register');\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n        credentials: 'include'\n      });\n\n      console.log('Registration response status:', response.status);\n      const data = await response.json();\n      console.log('Registration response data:', data);\n\n      if (!response.ok) {\n        console.error('Registration failed:', data.error);\n        // Return the error directly instead of throwing\n        return { success: false, error: data.error || 'Registration failed' };\n      }\n\n      console.log('Registration successful, setting user data');\n      setUser(data);\n      return { success: true };\n    } catch (err) {\n      console.error('Registration error:', err);\n      setError(err.message);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (credentials) => {\n    try {\n      console.log('Logging in with credentials:', credentials);\n      setLoading(true);\n      setError(null);\n\n      console.log('Sending login request to /api/login');\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n        credentials: 'include'\n      });\n\n      console.log('Login response status:', response.status);\n      const data = await response.json();\n      console.log('Login response data:', data);\n\n      if (!response.ok) {\n        console.error('Login failed:', data.error);\n        // Return the error directly instead of throwing\n        return { success: false, error: data.error || 'Login failed' };\n      }\n\n      console.log('Login successful, setting user data');\n      setUser(data);\n      return { success: true };\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/logout', {\n        method: 'POST',\n        credentials: 'include'\n      });\n\n      if (!response.ok) {\n        throw new Error('Logout failed');\n      }\n\n      setUser(null);\n      showSuccessNotification('Logged out successfully');\n      return { success: true };\n    } catch (err) {\n      console.error('Logout error:', err);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete user account\n  const deleteAccount = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/deleteUser', {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete account');\n      }\n\n      setUser(null);\n      showErrorNotification('Account deleted');\n      return { success: true };\n    } catch (err) {\n      console.error('Delete account error:', err);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add artist to favorites\n  const addToFavorites = async (artist) => {\n    if (!user) return { success: false, error: 'User not authenticated' };\n\n    try {\n      // Use the API service to fetch complete artist data and update favorites\n      const data = await updateFavorites('add', artist);\n\n      // Update user with new favorites\n      setUser(prevUser => ({\n        ...prevUser,\n        favorites: data.favorites\n      }));\n\n      showSuccessNotification('Added to favorites');\n      return { success: true };\n    } catch (err) {\n      console.error('Add to favorites error:', err);\n      return { success: false, error: err.message };\n    }\n  };\n\n  // Remove artist from favorites\n  const removeFromFavorites = async (artistId) => {\n    if (!user) return { success: false, error: 'User not authenticated' };\n\n    try {\n      // Use the API service to update favorites\n      const data = await updateFavorites('remove', artistId);\n\n      // Update user with new favorites\n      setUser(prevUser => ({\n        ...prevUser,\n        favorites: data.favorites\n      }));\n\n      showErrorNotification('Removed from favorites');\n      return { success: true };\n    } catch (err) {\n      console.error('Remove from favorites error:', err);\n      return { success: false, error: err.message };\n    }\n  };\n\n  // Check if an artist is in favorites\n  const isInFavorites = (artistId) => {\n    if (!user || !user.favorites) return false;\n    return user.favorites.some(fav => fav.artistId === artistId);\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    register,\n    login,\n    logout,\n    deleteAccount,\n    addToFavorites,\n    removeFromFavorites,\n    isInFavorites,\n    setUser\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}